using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Drawing.Imaging;

namespace Shipai_Kursach
{
    public partial class Form1 : Form
    {
        Bitmap bm;
        Bitmap bmBack;
        Bitmap[] fragments;
        Bitmap[] Forms;
        Graphics g;
        float angle = 0f;
        float scale = 1f;
        int kolvo = 0;

        public Form1()
        {
            InitializeComponent();
            Size = new System.Drawing.Size(1000, 500);

        }

        private void button1_Click(object sender, EventArgs e)
        {
            OpenFileDialog fl = new OpenFileDialog();
            fl.Filter = "Image Files(*.BMP;*.JPG;*.GIF;*.PNG)|*.BMP;*.JPG;*.GIF;*.PNG|All files (*.*)|*.*";
            if (fl.ShowDialog() == DialogResult.OK)
            {
                try
                {
                    bm = new Bitmap(fl.FileName);
                    bmBack = new Bitmap(fl.FileName);
                    pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
                    pictureBox2.SizeMode = PictureBoxSizeMode.StretchImage;
                    pictureBox3.SizeMode = PictureBoxSizeMode.StretchImage;
                    pictureBox1.Image = new Bitmap(bm);

                    g = pictureBox1.CreateGraphics();



                }
                catch
                {
                    MessageBox.Show("Bad file", "Ошибка", MessageBoxButtons.OK);
                }
            }
        }

        private void Draw_Click(object sender, EventArgs e)
        {




            int Gx, Gy;

            if (textBox1.Text == "" && textBox2.Text == "")
            {
                MessageBox.Show("X:?" +
                    "Y:?", "Ошибка", MessageBoxButtons.OK);
                return;
            }
            Gx = int.Parse(textBox1.Text);
            Gy = int.Parse(textBox2.Text);







            Pen p = new Pen(Color.Red, 1);
            int distance = 0, step = 0;
            distance = pictureBox1.ClientSize.Width / (Gx + 1);

            for (int i = 0; i < Gx; i++)
            {
                step += distance;
                g.DrawLine(p, new Point(step, 0), new Point(step, pictureBox1.ClientSize.Height));

            }
            step = 0;
            distance = pictureBox1.ClientSize.Height / (Gy + 1);

            for (int i = 0; i < Gy; i++)
            {
                step += distance;
                g.DrawLine(p, new Point(0, step), new Point(pictureBox1.ClientSize.Width, step));

            }

        }

        private void button2_Click(object sender, EventArgs e)
        {
            pictureBox1.Image = bmBack;
            trackBar1.Value = 0;
            angle = 0f;
            label6.Text = "0";
        }

        private void trackBar1_Scroll(object sender, EventArgs e)
        {

            angle = trackBar1.Value;
            label6.Text = angle.ToString();


        }

        public void button3_Click(object sender, EventArgs e)
        {
            Image img = new Bitmap(pictureBox1.Image.Width, pictureBox1.Image.Height);
            using (Graphics g = Graphics.FromImage(img))
            {
                g.TranslateTransform(img.Width / 2, img.Height / 2);
                g.RotateTransform(angle); // поворот на 45 градусов
                g.TranslateTransform(-(img.Width / 2), -(img.Height / 2));
                g.DrawImage(bm, 0, 0);
            }
            pictureBox1.Image = img;


        }

        private void button4_Click(object sender, EventArgs e)
        {
            if (pictureBox1.Image != null) //если в pictureBox есть изображение
            {
                //создание диалогового окна "Сохранить как..", для сохранения изображения
                SaveFileDialog savedialog = new SaveFileDialog();
                savedialog.Title = "Сохранить картинку как...";
                //отображать ли предупреждение, если пользователь указывает имя уже существующего файла
                savedialog.OverwritePrompt = true;
                //отображать ли предупреждение, если пользователь указывает несуществующий путь
                savedialog.CheckPathExists = true;
                //список форматов файла, отображаемый в поле "Тип файла"
                savedialog.Filter = "Image Files(*.PNG)|*.PNG|All files (*.*)|*.*";
                //отображается ли кнопка "Справка" в диалоговом окне
                savedialog.ShowHelp = true;
                if (savedialog.ShowDialog() == DialogResult.OK) //если в диалоговом окне нажата кнопка "ОК"
                {
                    try

                    {
                        int k = 0;


                        int Ix, Iy;
                        Ix = int.Parse(textBox1.Text) + 1;
                        Iy = int.Parse(textBox2.Text) + 1;
                        Forms = new Bitmap[Ix * Iy];

                        int stepX = bm.Size.Width / Ix;
                        int stepY = bm.Size.Height / Iy;
                        Bitmap tempImg = new Bitmap(stepX, stepY);
                        Bitmap catBM = (Bitmap)pictureBox1.Image;
                        int pos = savedialog.FileName.Length - 5;
                        int posX = -stepX, posY = -stepY;

                        for (int i = 0; i < Iy; i++)
                        {
                            posY += stepY;
                            posX = -stepX;
                            for (int j = 0; j < Ix; j++)
                            {
                                posX += stepX;

                                tempImg = catBM.Clone(new Rectangle(posX, posY, stepX, stepY), bm.PixelFormat);
                                Forms[k] = tempImg;
                                savedialog.FileName = savedialog.FileName.Insert(pos, k.ToString());
                                tempImg.Save(savedialog.FileName, System.Drawing.Imaging.ImageFormat.Png);
                                k++;
                            }
                        }
                    }
                    catch
                    {
                        MessageBox.Show("Невозможно сохранить изображение", "Ошибка",
                        MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
            }



        }
        //fragments
        private void button5_Click(object sender, EventArgs e)
        {
            OpenFileDialog dlg = new OpenFileDialog
            {
                Multiselect = true,
                Title = "Выберите файлы",
                InitialDirectory = @"C:\"
            };
            dlg.ShowDialog();
            fragments = new Bitmap[dlg.SafeFileNames.Length];

            // пользователь вышел из диалога ничего не выбрав
            if (dlg.FileName == String.Empty)
                return;
            int count = 0;
            foreach (string file in dlg.FileNames)
            {
                fragments[count] = new Bitmap(file);
                count++;
            }
            pictureBox2.Image = fragments[0];

        }

        private void button6_Click(object sender, EventArgs e)
        {
            kolvo++;
            if (kolvo == fragments.Length)
                kolvo = 0;
            pictureBox2.Image = fragments[kolvo];

        }
        unsafe public static Boolean BitmapsEqual(  Bitmap bmp1, Bitmap bmp2)
        {
            if (bmp1.Size != bmp2.Size)
                return false;
            BitmapData bmpd1 = bmp1.LockBits(new Rectangle(0, 0, bmp1.Width, bmp1.Height), ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb);
            BitmapData bmpd2 = bmp2.LockBits(new Rectangle(0, 0, bmp2.Width, bmp2.Height), ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb);
            Boolean res = true;
           
                Int32* p1 = (Int32*)bmpd1.Scan0;
                Int32* p2 = (Int32*)bmpd2.Scan0;
                for (Int32 i = 0; i < bmpd1.Height; i++)
                {
                    for (Int32 j = 0; j < bmpd2.Width; j++)
                    {
                        if (*p1 != *p2)
                        {
                            res = false;
                            break;
                        }
                        p1++;
                        p2++;
                    }
                }
           
            bmp1.UnlockBits(bmpd1);
            bmp2.UnlockBits(bmpd2);
            return res;
        }
        private void button7_Click(object sender, EventArgs e)
        {
            Image tempBit = new Bitmap(bm.Size.Width, bm.Size.Height);
            Graphics g = Graphics.FromImage(tempBit);
            int kol = fragments.Length;
            int posX = 0, posY = 0;
            int Ix = int.Parse(textBox1.Text) + 1;
            int Iy = int.Parse(textBox2.Text) + 1;
            int stepX = bm.Size.Width / Ix;
            int stepY = bm.Size.Height / Iy;
            int count = 0;
            for (int i = 0; i < kol; i++)
            {
                if(count==Ix)
                {
                    count = 0;
                    posX = 0;
                    posY += stepY;

                }
                for (int j = 0; j < kol; j++)
                {
                    if (BitmapsEqual(Forms[i], fragments[j]))
                    {
                        g.DrawImage(fragments[j], posX, posY);
                        break;
                    }
                }
                posX += stepX;
                count++;
                

            }
            pictureBox3.Image = tempBit;
        }

    }
  }
